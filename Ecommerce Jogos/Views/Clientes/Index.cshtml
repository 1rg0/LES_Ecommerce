@model Ecommerce_Jogos.Helpers.ListaPaginada<Ecommerce_Jogos.Models.Cliente>

@{
    ViewData["Title"] = "Lista de Clientes";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1>@ViewData["Title"]</h1>
    <a asp-action="Create" class="btn btn-success">
        <i class="bi bi-plus-circle"></i> Cadastrar Novo Cliente
    </a>
</div>

<div class="card mb-4">
    <div class="card-header">
        <i class="bi bi-search"></i> Filtros de Pesquisa
    </div>
    <div class="card-body">
        <form asp-action="Index" method="get">
            <div class="row">
                <div class="col-md-4 mb-3">
                    <label for="filtroNome" class="form-label">Filtrar por Nome</label>
                    <input type="text" id="filtroNome" name="filtroNome" class="form-control" placeholder="Digite o nome do cliente..." value="@ViewData["FiltroNome"]">
                </div>
                <div class="col-md-3 mb-3">
                    <label for="filtroCpf" class="form-label">Filtrar por CPF</label>
                    <input type="text" id="filtroCpf" name="filtroCpf" class="form-control" placeholder="000.000.000-00" value="@ViewData["FiltroCpf"]">
                </div>
                <div class="col-md-3 mb-3">
                    <label for="filtroEmail" class="form-label">Filtrar por E-mail</label>
                    <input type="email" id="filtroEmail" name="filtroEmail" class="form-control" placeholder="email@exemplo.com" value="@ViewData["FiltroEmail"]">
                </div>
                <div class="col-md-2 mb-3">
                    <label for="filtroStatus" class="form-label">Filtrar por Status</label>
                    <select id="filtroStatus" name="filtroStatus" class="form-select"
                            asp-items="@(new SelectList(new[] { new { Value = "true", Text = "Ativo" }, new { Value = "false", Text = "Inativo" } }, "Value", "Text", ViewData["FiltroStatus"]))">
                        <option value="">Todos</option>
                    </select>
                </div>
            </div>
            <div class="row mt-2">
                <div class="col-md-12 text-end">
                    <a asp-action="Index" class="btn btn-outline-secondary">Limpar Filtros</a>
                    <button type="submit" class="btn btn-primary">Aplicar Filtros</button>
                </div>
            </div>
        </form>
    </div>
</div>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                ID
            </th>
            <th>
                Nome Completo
            </th>
            <th>
                CPF
            </th>
            <th>
                E-mail
            </th>
            <th>
                Status
            </th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var cliente in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => cliente.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => cliente.NomeCompleto)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => cliente.CPF)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => cliente.Email)
                </td>
                <td>
                    @(cliente.Ativo ? "Ativo" : "Inativo")
                </td>
                <td style="white-space: nowrap;">
                    <a asp-action="Edit" asp-route-id="@cliente.Id" class="btn btn-sm btn-secondary">Editar</a>
                    <a asp-action="Details" asp-route-id="@cliente.Id" class="btn btn-sm btn-info">Detalhes</a>

                    <form asp-action="ToggleStatus" asp-route-id="@cliente.Id" method="post" style="display: inline;">
                        @if (cliente.Ativo)
                        {
                            <button type="submit" class="btn btn-sm btn-danger">Inativar</button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-sm btn-success">Ativar</button>
                        }
                    </form>

                    <button type="button" class="btn btn-sm btn-danger delete-btn"
                            data-bs-toggle="modal"
                            data-bs-target="#confirmDeleteModal"
                            data-client-id="@cliente.Id"
                            data-client-name="@cliente.NomeCompleto">
                        Excluir
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<nav aria-label="Paginação de Clientes">
    <ul class="pagination justify-content-center">
        <li class="page-item @prevDisabled">
            <a class="page-link" asp-action="Index"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-filtroNome="@ViewData["FiltroNome"]"
               asp-route-filtroCpf="@ViewData["FiltroCpf"]"
               asp-route-filtroEmail="@ViewData["FiltroEmail"]"
               asp-route-filtroStatus="@ViewData["FiltroStatus"]">
                Anterior
            </a>
        </li>

        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="Index"
                   asp-route-pageNumber="@i"
                   asp-route-filtroNome="@ViewData["FiltroNome"]"
                   asp-route-filtroCpf="@ViewData["FiltroCpf"]"
                   asp-route-filtroEmail="@ViewData["FiltroEmail"]"
                   asp-route-filtroStatus="@ViewData["FiltroStatus"]">
                    @i
                </a>
            </li>
        }

        <li class="page-item @nextDisabled">
            <a class="page-link" asp-action="Index"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-filtroNome="@ViewData["FiltroNome"]"
               asp-route-filtroCpf="@ViewData["FiltroCpf"]"
               asp-route-filtroEmail="@ViewData["FiltroEmail"]"
               asp-route-filtroStatus="@ViewData["FiltroStatus"]">
                Próxima
            </a>
        </li>
    </ul>
</nav>

<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Confirmar Exclusão</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Tem certeza que deseja excluir permanentemente o cliente <strong id="clientNameToDelete"></strong>?</p>
                <p>Esta ação não pode ser desfeita.</p>
            </div>
            <div class="modal-footer">
                <form asp-action="Delete" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="deleteClientId" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-danger">Excluir</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>

        document.addEventListener('DOMContentLoaded', function () 
        {
            var confirmDeleteModal = document.getElementById('confirmDeleteModal');
            confirmDeleteModal.addEventListener('show.bs.modal', function (event) 
            {
                var button = event.relatedTarget;
                var clientId = button.getAttribute('data-client-id');
                var clientName = button.getAttribute('data-client-name');
                var modalClientNameElement = confirmDeleteModal.querySelector('#clientNameToDelete');
                var modalHiddenInputElement = confirmDeleteModal.querySelector('#deleteClientId');
                modalClientNameElement.textContent = clientName;
                modalHiddenInputElement.value = clientId;
            });
        });
    </script>
}